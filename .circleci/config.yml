version: 2.1

workflows:
  version: 2
  main:
    jobs:

      - prepare

      - unittest:
          requires:
            - prepare

      - test_downloader:
          requires:
            - prepare

      - test-sqlite:
          requires:
            - prepare

      - test-mysql:
          requires:
            - prepare

      - build-docker:
          requires:
            - unittest
            - test_downloader
            - test-sqlite
            - test-mysql

      - build-docs:
          requires:
            - unittest
            - test_downloader
            - test-sqlite
            - test-mysql

      - build-binary:
          requires:
            - unittest
            - test_downloader
            - test-sqlite
            - test-mysql

aliases:
  hash_deps: &hash_deps
    run:
      name: Hash Requirement files
      command: |
        python .circleci/hash_requirement_files.py > .circleci/PIP_CACHE_KEY
        cat .circleci/PIP_CACHE_KEY

  restore_pip_cache: &restore_pip_cache
    restore_cache:
      keys:
        - pip-v1-{{ .Branch }}-{{ checksum ".circleci/PIP_CACHE_KEY" }}

  install_pip_deps: &install_pip_deps
    run:
      name: Install Dependencies
      command: |
        echo 'export PATH=/home/circleci/.local/bin:$PATH' >> $BASH_ENV
        source $BASH_ENV
        pip install --user pip -U
        pip install --user codecov -r docs/requirements.txt -r requirements/dev.txt

  save_pip_cache: &save_pip_cache
    save_cache:
      key: pip-v1-{{ .Branch }}-{{ checksum ".circleci/PIP_CACHE_KEY" }}
      paths:
        - /home/circleci/.cache/pip
        - /home/circleci/.cache/pre-commit

  upload_codecov_report: &upload_codecov_report
    run:
      when: on_success
      name: Upload Coverage Report
      command: codecov

  restore_test_data_cache: &restore_test_data_cache
    restore_cache:
      keys:
        - test-data-{{ .Branch }}-{{ checksum ".circleci/test-data-version" }}
        - test-data-{{ .Branch }}-
        - test-data-

  save_test_data_cache: &save_test_data_cache
    save_cache:
      key: test-data-{{ .Branch }}-{{ checksum ".circleci/test-data-version" }}
      paths:
        - /home/circleci/data



jobs:
  prepare:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout # check out the code in the project directory
      - *hash_deps
      - *restore_pip_cache
      - *install_pip_deps

      - *restore_test_data_cache
      - run:
          name: get test data
          command: |
            mkdir -p ~/data
            curl -L https://github.com/BGmi/BGmi/releases/download/test-data/data-1.sql -o ~/data/db.sql
      - *save_test_data_cache

      - run:
          name: Code Style
          command: pre-commit run --all-files

      - *save_pip_cache

  unittest:
    docker:
      - image: circleci/python:3.6

    steps:
      - checkout # check out the code in the project directory
      - *hash_deps
      - *restore_pip_cache
      - *restore_test_data_cache
      - *install_pip_deps


      - run:
          name: Unittest
          command: coverage run -m pytest bgmi --ignore=bgmi/downloader

      - *upload_codecov_report

  test_downloader:
    docker:
      - image: circleci/python:3.6
      - image: linuxserver/deluge
        environment:
          PUID: "1001"
          PGID: "1000"
          TZ: "Asia/Shanghai"
          UMASK_SET: "022"

      - image: bgmidocker/aria2:latest
        environment:
          RPC_SECRET: aria2-rpc-secret

      - image: caseyfw/transmission
        environment:
          UID: '1000'
          USERNAME: "transmission-rpc-username"
          PASSWORD: "example-rpc-password"
    steps:
      - checkout # check out the code in the project directory
      - *hash_deps
      - *restore_pip_cache
      - *restore_test_data_cache
      - *install_pip_deps

      - run:
          name: Wait for Docker Ready
          command: |
            # wait for mysql start up
            for i in `seq 1 100`; do
              nc -z 127.0.0.1 8112 && \
                nc -z 127.0.0.1 6800 && \
                nc -z 127.0.0.1 9091 && \
                echo Success && exit 0
              echo -n .
              sleep 0.1
            done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: test downloader
          command: coverage run -m pytest bgmi/downloader
          environment:
            BGMI_TRANSMISSION_RPC_URL: "http://transmission-rpc-username:example-rpc-password\
            @127.0.0.1:9091/transmission/rpc"
            BGMI_ARIA2_RPC_TOKEN: token:aria2-rpc-secret

      - *upload_codecov_report

  test-sqlite:
    docker:
      - image: circleci/python:3.6

    environment:
      DB_SQL_PATH: /home/circleci/data/db.sql

    steps:
      - checkout # check out the code in the project directory
      - *hash_deps
      - *restore_pip_cache
      - *restore_test_data_cache
      - *install_pip_deps

      - run:
          name: restore sql
          command: |
            coverage run -m bgmi install --no-web

      - run:
          name: Unittest
          command: coverage run -m pytest tests/test_db_models.py

      - *upload_codecov_report

  test-mysql:
    docker:
      - image: circleci/python:3.6
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: bgmi

    environment:
      BGMI_DB_URL: mysql://root:root_password@127.0.0.1:3306/bgmi?charset=utf8mb4
      DB_SQL_PATH: /home/circleci/data/db.sql

    steps:
      - checkout # check out the code in the project directory
      - *hash_deps
      - *restore_pip_cache
      - *restore_test_data_cache
      - *install_pip_deps

      - run:
          name: Wait for MySQL Ready
          command: |
            # wait for mysql start up
            for i in `seq 1 100`;
              do
                nc -z 127.0.0.1 3306 && echo Success && exit 0
                echo -n .
                sleep 0.1
              done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: restore sql
          command: |
            coverage run -m bgmi install --no-web

      - run:
          name: Unittest
          command: coverage run -m pytest tests/test_db_models.py

      - *upload_codecov_report



  build-docs:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - *hash_deps
      - *restore_pip_cache
      - *restore_test_data_cache
      - *install_pip_deps

      - run:
          name: build docs
          command: |
            cd docs
            make html

      - *upload_codecov_report

  build-docker:
    docker:
      - image: circleci/python:3.6

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true    # default - false

      - run:
          name: Try Build Docker
          command: docker build -t bgmi -t bgmidocker/bgmi .

      - run:
          name: Test Docker Command
          command: docker run -v $HOME/.bgmi:/bgmi --net host bgmi install

  build-binary:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - *hash_deps
      - *restore_pip_cache
      - *restore_test_data_cache
      - *install_pip_deps

      - run:
          name: build binary
          command: |
            pip install --user -e .
            pyinstaller .ci/bgmi.spec --distpath ./dist/binary/

      - store_artifacts:
          path: /home/circleci/project/dist/binary/bgmi
          destination: bgmi-linux-amd64

      - *upload_codecov_report
