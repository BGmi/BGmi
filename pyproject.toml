[build-system]
requires = ["flit-core==3.11.0"]
build-backend = "flit_core.buildapi"

[project]
name = "bgmi"
version = "5.0.0a3"
description = 'BGmi is a cli tool for subscribed bangumi.'
authors = [{ name = "RicterZ", email = "ricterzheng@gmail.com" }]
readme = 'README.md'
license = 'MIT'
requires-python = '>=3.11,<4'
maintainers = [{ name = "Trim21", email = "i@trim21.me" }]
dependencies = [
  'anime-episode-parser (==0.0.12)',
  'beautifulsoup4 (==4.13.3)',
  'click (==8.1.8)',
  "fastapi==0.115.11",
  'filetype (==1.2.0)',
  'icalendar (==6.1.2)',
  "loguru==0.7.3",
  "packaging==24.2",
  'pycomplete (==0.4.0)',
  "pydantic==2.10.6",
  'qbittorrent-api (==2025.2.0)',
  'requests (==2.32.3)',
  'semver (==3.0.4)',
  "sqlalchemy==2.0.39",
  'stevedore (==5.4.1)',
  'strsimpy (==0.2.1)',
  'tomlkit (==0.13.2)',
  'transmission-rpc (==7.0.11)',
  "uvicorn==0.34.0",
  'wcwidth (>=0.2.13,<0.3.0)',
  "yarl==1.18.3",
]
classifiers = [
  'Development Status :: 4 - Beta',
  'Intended Audience :: Other Audience',
  'Natural Language :: Chinese (Traditional)',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python :: Implementation :: PyPy',
]
keywords = ['bangumi', 'bgmi', 'feed']

[project.urls]
homepage = 'https://github.com/BGmi/BGmi'
repository = 'https://github.com/BGmi/BGmi'

[project.scripts]
bgmi = 'bgmi.main:main'
bgmi_http = 'bgmi.front.server:main'

[project.entry-points."bgmi.downloader"]
"aria2-rpc" = 'bgmi.downloader:Aria2DownloadRPC'
"transmission-rpc" = 'bgmi.downloader:TransmissionRPC'
"deluge-rpc" = 'bgmi.downloader:DelugeRPC'
"qbittorrent-webapi" = 'bgmi.downloader:QBittorrentWebAPI'
noop = 'bgmi.downloader:Noop'

[dependency-groups]
dev = [
  # tests
  'coverage[toml]==7.7.1',
  'pytest==8.3.5',
  'pytest-github-actions-annotate-failures==0.3.0',
  'requests-cache ==1.2.1',
  # lint
  'mypy==1.15.0',
  # stubs
  'types-requests ==2.32.0.20250306',
  "httpx==0.28.1",
]

[tool.coverage.report]
exclude_lines = [
  'pragma: no cover',
  'if TYPE_CHECKING:',
  'if __name__ == "__main__":',
  'if typing.TYPE_CHECKING:',
  'raise NotImplementedError',
  'if os.getenv("DEBUG"):',
  'if os.getenv("DEBUG_SCRIPT"):',
  'if os.environ.get("DEBUG"):',
]

[tool.pytest.ini_options]
addopts = '-v --durations=10'
junit_family = 'legacy'

[tool.isort]
default_section = 'THIRDPARTY'
known_first_party = 'bgmi'
length_sort = false
line_length = 120
multi_line_output = 3
no_lines_before = 'LOCALFOLDER'
use_parentheses = true
include_trailing_comma = true

[tool.mypy]
python_version = '3.11'
disallow_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
pretty = true
plugins = ['pydantic.mypy']

[[tool.mypy.overrides]]
module = [
  "bgmi.downloader.*",
  "bgmi.website.mikan",
  "bgmi.website.bangumi_moe",
  "bgmi.website.share_dmhy",
]
disallow_untyped_defs = false

[tool.pylint]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
extension-pkg-whitelist = ['pydantic']
disable = [
  'fixme',
  "consider-using-f-string",
  "cell-var-from-loop",
  "missing-function-docstring",
  "missing-class-docstring",
  "missing-module-docstring",
  'raise-missing-from',
  'invalid-name',
  'too-many-locals',
  'duplicate-code',
  'too-few-public-methods',
  'unused-argument',
  'no-else-return',
  'assignment-from-none',
  'unused-variable',
  'broad-except',
  'too-many-nested-blocks',
  'too-many-branches',
  'redefined-outer-name',
  'too-many-return-statements',
  'too-many-statements',
  'too-many-arguments',
  'not-an-iterable',
  'redefined-builtin',
]

[tool.black]
line-length = 120
target-version = ['py311']

[tool.ruff]
line-length = 120
target-version = 'py311'
