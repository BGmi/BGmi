steps:
  - task: Cache@1
    inputs:
      key: '"$(Agent.OS)" | "${{ parameters.python_version }}" | poetry.lock'
      restoreKeys: |
        "$(Agent.OS)" | "${{ parameters.python_version }}" | poetry.lock
        "$(Agent.OS)" | "${{ parameters.python_version }}"
        "$(Agent.OS)"
      path: /home/vsts/.cache/pip
    displayName: Cache pip
    condition: eq(variables['Agent.OS'], 'Linux')

  - task: Cache@1
    inputs:
      key: '"$(Agent.OS)" | "${{ parameters.python_version }}" | poetry.lock'
      restoreKeys: |
        "$(Agent.OS)" | "${{ parameters.python_version }}" | poetry.lock
        "$(Agent.OS)" | "${{ parameters.python_version }}"
        "$(Agent.OS)"
      path: /Users/runner/Library/Caches/pip
    displayName: Cache pip
    condition: eq(variables['Agent.OS'], 'Darwin')

  - task: Cache@1
    inputs:
      key: '"$(Agent.OS)" | "${{ parameters.python_version }}" | poetry.lock'
      restoreKeys: |
        "$(Agent.OS)" | "${{ parameters.python_version }}" | poetry.lock
        "$(Agent.OS)" | "${{ parameters.python_version }}"
        "$(Agent.OS)"
      path: C:\Users\VssAdministrator\AppData\Local\pip\Cache
    displayName: Cache pip
    condition: eq(variables['Agent.OS'], 'Windows_NT')
