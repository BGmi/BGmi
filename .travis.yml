language: python

python:
  - "3.6"

os: linux

dist: xenial

cache:
  pip: true
  directories:
    - /c/python36
    - $HOME/.cache/pip
    - $HOME/AppData/Local/pip/Cache
    - $HOME/Library/Caches/pip
    - $HOME/Library/Caches/Homebrew
    - $HOME/choco/cache
    - $HOME/.cache/pre-commit

env:
  global:
    - PYTHONIOENCODING=utf-8
    - PYTHONUTF8=1
    - TRAVIS_CI=TRAVIS_CI
  # make matrix
  matrix:
    - DB=sqlite
    - DB=mysql

services:
  - mysql
  - docker

stages:
  - test
  - name: deploy
    if: branch = master

jobs:
  include:
    - stage: test
    - os: osx
      name: 'test python3.6 on MacOS'
      language: generic
      python: "3.6"
      env:
        - TRAVIS_PYTHON_VERSION=3.6

    - os: windows
      language: sh
      python: "3.6"
      name: 'test python3.6 on Windows'
      env:
        - TRAVIS_PYTHON_VERSION=3.6

    - python: '3.6'
      os: linux
      name: 'Build docs'
      script:
        - pip install -r docs/requirements.txt
        - cd docs
        - make html

    - python: '3.6'
      os: linux
      name: 'Code Style'
      script:
        - pre-commit run --all-files

    - os: linux
      name: Test build and run docker
      before_install: false
      install: false
      script:
        - docker build -t bgmi .
        - docker run -v $HOME/.bgmi:/bgmi --net host bgmi install
        - ls $HOME/.bgmi

    - os: linux
      name: Build binary and test
      python: '3.6'
      before_install: false
      install: pip install -q -r requirements/dev.txt
      script:
        - bash .ci/build.sh
        - export PATH="$PWD/dist/binary:$PATH"
        - |
          BANGUMI_1=名侦探柯南
          BANGUMI_2=妖怪手表
          BANGUMI_3=海贼王

          rm -rf ~/.bgmi | true
          bgmi install
          cp tests/test_script.py $HOME/.bgmi/scripts/test_script.py
          bgmi --help
          bgmi gen nginx.conf --server-name _
          bgmi cal -f
          bgmi cal
          bgmi config ADMIN_TOKEN 233
          bgmi config DOWNLOAD_DELEGATE 'aria2-rpc'
          bgmi config GLOBAL_FILTER 'Leopard-Raws, hevc, x265, c-a Raws, 外挂'
          bgmi config
          bgmi add ${BANGUMI_1} ${BANGUMI_2} ${BANGUMI_3}
          bgmi update
          bgmi delete ${BANGUMI_3}
          bgmi add ${BANGUMI_1} ${BANGUMI_2}
          bgmi add ${BANGUMI_2} --episode 1
          bgmi fetch ${BANGUMI_2}
          bgmi list
          bgmi mark ${BANGUMI_2} 1
          bgmi update ${BANGUMI_2}
          bgmi filter ${BANGUMI_2} --subtitle "" --exclude "MKV" --regex "720p|720P"
          bgmi fetch ${BANGUMI_2}
          bgmi search "海贼王" --regex-filter '.*MP4.*720P.*' --min-episode 800 --max-episode 900


    - stage: deploy
      os: linux
      name: deploy binary
      python: '3.6'
      before_install: false
      install: pip install -q -r requirements/dev.txt
      script:
        - rm ./dist/binary -rf
        - bash .ci/build.sh

      deploy:
       - skip_cleanup: true
         provider: releases
         api_key: ${GITHUB_OAUTH_TOKEN}
         file_glob: true
         file: ./dist/binary/*
         name: ${TRAVIS_TAG}
         on:
           tags: true
           branch: master


before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

before_install:
  - |
    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      bash .ci/install_python_on_osx.bash
      source $HOME/venv/bin/activate
    fi
  - |
    if [[ $TRAVIS_OS_NAME == "windows" ]]; then
      if [ -z "$(ls -A /c/Python36)" ]; then

        choco config set cacheLocation $HOME/choco/cache

        if [[ $TRAVIS_PYTHON_VERSION == "3.7" ]];then
          choco install python --version 3.7.3
        elif [[ $TRAVIS_PYTHON_VERSION == '3.6' ]];then
          choco install python --version 3.6.8
        else
          travis_terminate
        fi
      fi

      export LANG=en_US.UTF-8
      v=$TRAVIS_PYTHON_VERSION
      export PATH="/c/Python${v/./}:/c/Python${v/./}/Scripts:$PATH"
      python -m pip install --upgrade pip wheel;
    fi

install:
  - chmod +x .ci/install.bash
  - ./.ci/install.bash

script:
  - bash .ci/script.bash


after_success:
  - codecov
