language: python

python:
  - "3.6"

os: linux

dist: xenial

cache:
  pip: true
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/pip
    - $HOME/Library/Caches/Homebrew
    - $HOME/choco/cache
    - $HOME/.cache/pre-commit

env:
  global:
    - PYTHONIOENCODING=utf-8
    - TRAVIS_CI=TRAVIS_CI
    - BANGUMI_1=名侦探柯南
    - BANGUMI_2=妖怪手表
    - BANGUMI_3=海贼王
  # make matrix
  matrix:
    - DB=sqlite
    - DB=mysql

services:
  - mysql
  - docker

matrix:
  fast_finish: true

  include:
    - os: osx
      name: 'test python3.6 on MacOS'
      language: generic
      python: "3.6"
      env:
        - TRAVIS_PYTHON_VERSION=3.6

    - os: osx
      name: 'test python3.7 on MacOS'
      language: generic
      python: "3.7"
      env:
        - TRAVIS_PYTHON_VERSION=3.7

    - os: windows
      language: sh
      python: "3.6"
      name: 'test python3.6 on Windows'
      env:
        - TRAVIS_PYTHON_VERSION=3.6

    - os: windows
      language: sh
      python: "3.7"
      name: 'test python3.7 on Windows'
      env:
        - TRAVIS_PYTHON_VERSION=3.7

    - python: '3.7'
      dist: xenial
      env: DB=sqlite

    - python: '3.7'
      dist: xenial
      env: DB=mysql

    - python: '3.6'
      os: linux
      name: 'Downloader aria2-rpc'
      env:
        - DOWNLOADER=aria2-rpc
      script:
        - bash .ci/tests/aria2.bash

    - python: '3.6'
      os: linux
      name: 'Downloader deluge-rpc'
      env:
        - DOWNLOADER=deluge-rpc
      script:
        - bash .ci/tests/delute.bash

    - python: '3.6'
      os: linux
      name: 'Downloader transmission-rpc'
      env:
        - DOWNLOADER=transmission-rpc
      script:
        - bash .ci/tests/transmission.bash

    - python: '3.6'
      os: linux
      name: 'Build docs'
      script:
        - pip install -r docs/requirements.txt
        - cd docs
        - make html

    - python: '3.6'
      os: linux
      name: 'Code Style'
      script:
        - pre-commit run --all-files

    - os: linux
      name: Test build and run docker
      before_install: false
      install: false
      script:
        - docker build -t bgmi .
        - docker run -v $HOME/.bgmi:/bgmi --net host bgmi install
        - ls $HOME/.bgmi

    - os: linux
      name: Build binary and test
      python: '3.6'
      before_install: false
      script:
        - bash .ci/build.sh
        - alias bgmi="./dist/bgmi"
        - bash ./.ci/command_test.bash


before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

before_install:
  - |
    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      bash .ci/install_python_on_osx.bash
      source $HOME/venv/bin/activate
    fi
  - |
    if [[ $TRAVIS_OS_NAME == "windows" ]]; then
      choco config set cacheLocation $HOME/choco/cache

      if [[ $TRAVIS_PYTHON_VERSION == "3.7" ]];then
        choco install python --version 3.7.3
      elif [[ $TRAVIS_PYTHON_VERSION == '3.6' ]];then
        choco install python --version 3.6.8
      else
        travis_terminate
      fi

      v=$TRAVIS_PYTHON_VERSION
      export PATH="/c/Python${v/./}:/c/Python${v/./}/Scripts:$PATH"
      python -m pip install --upgrade pip wheel;
    fi

install:
  - bash ./.ci/install.bash

script:
  - alias bgmi="coverage run -a -m bgmi"
  - bash ./.ci/unittest.bash
  - bash <(curl -s https://codecov.io/bash) -c -F command > /dev/null


after_success:
  - codecov
